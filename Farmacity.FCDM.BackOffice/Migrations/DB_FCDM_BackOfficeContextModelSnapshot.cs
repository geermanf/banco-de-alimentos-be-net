// <auto-generated />
using System;
using Farmacity.FCDM.BackOffice.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Farmacity.FCDM.BackOffice.Migrations
{
    [DbContext(typeof(DB_FCDM_BackOfficeContext))]
    partial class DB_FCDM_BackOfficeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Farmacity.FCDM.BackOffice.Entities.InternalUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsOrganization");

                    b.Property<string>("Key");

                    b.Property<long?>("OrganizationInfoId");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationInfoId");

                    b.ToTable("InternalUsers");
                });

            modelBuilder.Entity("Farmacity.FCDM.BackOffice.Entities.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adults");

                    b.Property<string>("Children");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Key");

                    b.Property<string>("Number")
                        .IsRequired();

                    b.Property<string>("OrganizationName")
                        .IsRequired();

                    b.Property<string>("OrganizationPhone");

                    b.Property<string>("Reference");

                    b.Property<string>("ResponsableEmail");

                    b.Property<string>("ResponsableFirstName");

                    b.Property<string>("ResponsableLastName");

                    b.Property<string>("ResponsablePhone");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Farmacity.FCDM.BackOffice.Entities.InternalUser", b =>
                {
                    b.HasOne("Farmacity.FCDM.BackOffice.Entities.Organization", "OrganizationInfo")
                        .WithMany()
                        .HasForeignKey("OrganizationInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
